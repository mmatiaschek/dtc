---
name: "pre-release"

on:
  push:
    tags:
      - "*-rc[0-9]+"
  workflow_dispatch:

jobs:
  pre-release:
    name: "Release Candidate"
    runs-on: "ubuntu-latest"

    steps:

      - uses: actions/checkout@v3
      - name: Set version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: "Run build of HTML version"
        run: ./dtcw generateHTML

      - name: "Upload html5 version"
        uses: actions/upload-artifact@v3.1.1
        with:
          name: html5
          path: build/html5
          retention-days: 5
          
      - name: zip html5 version
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r solution_architecture-${{ env.RELEASE_VERSION }}.zip build/html5

      - name: "Remove help for PDF version"
        run: |
          find . -name "*\.adoc" -exec sed -i '/\*\*\*\*/,/\*\*\*\*/d' {} \;
          find . -name "*\.adoc" -exec sed -i '/arc42help/d' {} \;

      - name: "Run build of PDF version"
        run: ./dtcw generatePDF

      - name: "Rename PDF with version"
        run: mv build/pdf/arc42/arc42.pdf solution_architecture-${{ env.RELEASE_VERSION }}.pdf

      - name: "Upload PDF version"
        uses: actions/upload-artifact@v3.1.1
        with:
          name: PDF
          path: solution_architecture-${{ env.RELEASE_VERSION }}.pdf
          retention-days: 5
          
      - name: "release candidate"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          # automatic_release_tag: "latest-rc"
          prerelease: true
          title: "Release Candidate"
          files: |
            solution_architecture-${{ env.RELEASE_VERSION }}.zip
            solution_architecture-${{ env.RELEASE_VERSION }}.pdf
